// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Verification {
    id String @id @default(cuid())

    code String @unique
    email String

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId String

    createdAt DateTime @default(now())
}

model User {
    id    String @id @default(cuid())
    username  String?
    email String @unique

    token String @unique

    chats      Chat[]
    Models Model[]

    messages Message[]

    plan Plan @default(FREE)
    
    createdAt DateTime @default(now())
    registered Boolean @default(false)

    activeVerifications Verification[]
}

enum Plan {
    FREE
    STARTER
    PLUS
    ENTERPRISE
}

model Model {
    id String @id @default(cuid())

    name   String
    system String

    icon String

    owner   User?   @relation(fields: [ownerId], references: [id], onDelete: SetNull)
    ownerId String?

    chats    Chat[]
    messages Message[]
}

model Chat {
    id   String @id @default(cuid())
    name String

    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())

    users User[]

    messages Message[]
    models   Model[]

    copyOf Chat? @relation("ChatToChat", fields: [copyOfId], references: [id], onDelete: SetNull)
    copyOfId String?

    copies Chat[] @relation("ChatToChat")
}

model Message {
    id   String @id @default(cuid())
    text String

    createdAt DateTime @default(now())

    chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
    chatId String

    sentByModel   Model? @relation(fields: [sentByModelId], references: [id], onDelete: Cascade)
    sentByModelId String?

    sentByUser   User?   @relation(fields: [sentByUserId], references: [id], onDelete: Cascade)
    sentByUserId String?
}
